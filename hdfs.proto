syntax = "proto2";

message OpenFileRequest {
  required string fileName = 1; // fileName
  required bool forRead = 2; // true, for read; false for write
}

message OpenFileResponse {
  required int32 status = 1; // result of the call
  required int32 handle = 2; // file handle. Use this to close file on write
// for read, the numbers for the various blocks. Not populated in write mode
  repeated int32 blockNums = 3;  
}

message CloseFileRequest {
  required int32 handle = 1; // obtained from OpenFile
}

message CloseFileResponse {
  required int32 status = 1;
}

message WriteBlockRequest {
  required BlockLocations blockInfo = 1;
  repeated bytes data = 2;
}

message WriteBlockResponse {
  required int32 status = 1;
}

message DataNodeLocation {
  required string ip = 1	;
  required int32 port = 2;
}

message BlockLocations {
  required int32 blockNumber = 1;
  repeated DataNodeLocation locations = 2;
}

message BlockLocationRequest {
  repeated int32 blockNums = 1;
}

message BlockLocationResponse {
  required int32 status = 1;
  repeated BlockLocations blockLocations = 2;
}

message AssignBlockRequest {
  required int32 handle = 1; // obtain using call to OpenFile
}

message AssignBlockResponse {
  required int32 status = 1;
  required BlockLocations newBlock = 2;
}

message ListFilesRequest {
  required string dirName = 1; // unused, place holder to support mkdir, etc
}

message ListFilesResponse {
  required int32 status = 1;
  repeated string fileNames = 2;
}

message ReadBlockRequest {
  required int32 blockNumber = 1;
}

message ReadBlockResponse {
  required int32 status = 1;
  repeated bytes data = 2;
}

message FileData{
	required string data = 1;
}

message BlockReportRequest {
  required int32 id = 1; // identity of the DN. All communication to the NN uses the same id
  required DataNodeLocation location = 2;
  repeated int32 blockNumbers = 3;
}

message BlockReportResponse {
  repeated int32 status = 1;
}

message HeartBeatRequest {
  required int32 id = 1;
}

message HeartBeatResponse {
  required int32 status = 1;
}
